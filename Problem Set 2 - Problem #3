# Decision Trees
> library(rpart)
> data("bodyfat", package = "mboost")
> # if error
> install.packages("mboost")
> data("bodyfat", package = "mboost")
> dim(bodyfat)
> attributes(bodyfat)

> bodyfat[1:5,]

> # Training Sets

> set.seed(1234)
> ind <- sample(2, nrow(bodyfat), replace=TRUE, prob=c(0.7, 0.3))
> bodyfat.train <- bodyfat[ind==1,]
> bodyfat.test <- bodyfat[ind==2,]

> # Train the Tree

> library(rpart)
> myFormula <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth
> bodyfat_rpart <- rpart(myFormula, data = bodyfat.train, control = rpart.control(minsplit = 10))
> attributes(bodyfat_rpart)

> print(bodyfat_rpart$cptable)
        
> plot(bodyfat_rpart)
> text(bodyfat_rpart, use.n=T)
> # See Output

> # prune

> opt <- which.min(bodyfat_rpart$cptable[,"xerror"])
> cp <- bodyfat_rpart$cptable[opt, "CP"]
> bodyfat_prune <-prune(bodyfat_rpart, cp = cp)
> print(bodyfat_prune)

> plot(bodyfat_prune)
> text(bodyfat_prune, use.n=T)
> # See Output

> # Prediction
> DEXfat_pred <- predict(bodyfat_prune, newdata=bodyfat.test)
> xlim <- range(bodyfat$Dexfat)
> plot(DEXfat_pred ~ DEXfat, data=bodyfat.test, xlab="Observed", ylab="Predicted", ylim=xlim, xlim=xlim)

> abline(a=0, b=1)
